Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 variable_list function_list

    3 function_list: function
    4              | function_list function

    5 $@2: %empty

    6 $@3: %empty

    7 function: type _ID $@2 _LPAREN parameter _RPAREN $@3 body

    8 type: _TYPE

    9 parameter: %empty
   10          | type _ID

   11 $@4: %empty

   12 body: _LBRACKET variable_list $@4 statement_list _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 variable_part: _ID
   16              | variable_part _COMMA _ID

   17 variable: type variable_part _SEMICOLON

   18 statement_list: %empty
   19               | statement_list statement

   20 statement: compound_statement
   21          | ONLY_ASSIGN assignment_statement
   22          | if_statement
   23          | return_statement
   24          | increment
   25          | decrement
   26          | do_loop
   27          | while_loop
   28          | for_loop
   29          | _ASM

   30 increment: _ID _INC _SEMICOLON

   31 decrement: _ID _DEC _SEMICOLON

   32 compound_statement: _LBRACKET statement_list _RBRACKET

   33 @5: %empty

   34 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

   35 @6: %empty

   36 $@7: %empty

   37 while_loop: _WHILE @6 _LPAREN rel_exp $@7 _RPAREN statement

   38 for_loop: assignment_statement rel_exp _SEMICOLON left_part_assignment statement

   39 assignment_statement: left_part_assignment _SEMICOLON

   40 left_part_assignment: _ID _ASSIGN num_exp

   41 num_exp: exp
   42        | num_exp _AROP exp
   43        | conditional_operator

   44 exp: literal
   45    | _ID
   46    | function_call
   47    | _LPAREN num_exp _RPAREN
   48    | _ID _INC
   49    | _ID _DEC

   50 literal: _INT_NUMBER
   51        | _BYTE_NUMBER

   52 $@8: %empty

   53 function_call: _ID $@8 _LPAREN argument _RPAREN

   54 argument: %empty
   55         | num_exp

   56 if_statement: if_part
   57             | if_part _ELSE statement

   58 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value _DDOT conditional_value

   59 conditional_value: literal
   60                  | _ID

   61 @9: %empty

   62 $@10: %empty

   63 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN statement

   64 rel_exp: num_exp _RELOP num_exp

   65 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 8
_IF (259) 63
_ELSE (260) 57
_RETURN (261) 65
_ID (262) 7 10 15 16 30 31 40 45 48 49 53 60
_INT_NUMBER (263) 50
_BYTE_NUMBER (264) 51
_LPAREN (265) 7 34 37 47 53 58 63
_RPAREN (266) 7 34 37 47 53 58 63
_LBRACKET (267) 12 32
_RBRACKET (268) 12 32
_ASSIGN (269) 40
_SEMICOLON (270) 17 30 31 34 38 39 65
_AROP (271) 42
_RELOP (272) 64
_INC (273) 30 48
_DEC (274) 31 49
_DDOT (275) 58
_QMARK (276) 58
_COMMA (277) 16
_DO (278) 34
_WHILE (279) 34 37
_ASM (280) 29
ONLY_ASSIGN (281) 21
ONLY_IF (282)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 2, on right: 0
$@1 (30)
    on left: 1, on right: 2
function_list (31)
    on left: 3 4, on right: 2 4
function (32)
    on left: 7, on right: 3 4
$@2 (33)
    on left: 5, on right: 7
$@3 (34)
    on left: 6, on right: 7
type (35)
    on left: 8, on right: 7 10 17
parameter (36)
    on left: 9 10, on right: 7
body (37)
    on left: 12, on right: 7
$@4 (38)
    on left: 11, on right: 12
variable_list (39)
    on left: 13 14, on right: 2 12 14
variable_part (40)
    on left: 15 16, on right: 16 17
variable (41)
    on left: 17, on right: 14
statement_list (42)
    on left: 18 19, on right: 12 19 32
statement (43)
    on left: 20 21 22 23 24 25 26 27 28 29, on right: 19 34 37 38 57
    63
increment (44)
    on left: 30, on right: 24
decrement (45)
    on left: 31, on right: 25
compound_statement (46)
    on left: 32, on right: 20
do_loop (47)
    on left: 34, on right: 26
@5 (48)
    on left: 33, on right: 34
while_loop (49)
    on left: 37, on right: 27
@6 (50)
    on left: 35, on right: 37
$@7 (51)
    on left: 36, on right: 37
for_loop (52)
    on left: 38, on right: 28
assignment_statement (53)
    on left: 39, on right: 21 38
left_part_assignment (54)
    on left: 40, on right: 38 39
num_exp (55)
    on left: 41 42 43, on right: 40 42 47 55 64 65
exp (56)
    on left: 44 45 46 47 48 49, on right: 41 42
literal (57)
    on left: 50 51, on right: 44 59
function_call (58)
    on left: 53, on right: 46
$@8 (59)
    on left: 52, on right: 53
argument (60)
    on left: 54 55, on right: 53
if_statement (61)
    on left: 56 57, on right: 22
conditional_operator (62)
    on left: 58, on right: 43
conditional_value (63)
    on left: 59 60, on right: 58
if_part (64)
    on left: 63, on right: 56 57
@9 (65)
    on left: 61, on right: 63
$@10 (66)
    on left: 62, on right: 63
rel_exp (67)
    on left: 64, on right: 34 37 38 58 63
return_statement (68)
    on left: 65, on right: 23


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . variable_list function_list

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 variable_list . function_list
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 5

    function_list  go to state 6
    function       go to state 7
    type           go to state 8
    variable       go to state 9


State 5

    8 type: _TYPE .

    $default  reduce using rule 8 (type)


State 6

    2 program: $@1 variable_list function_list .
    4 function_list: function_list . function

    _TYPE  shift, and go to state 5

    $default  reduce using rule 2 (program)

    function  go to state 10
    type      go to state 11


State 7

    3 function_list: function .

    $default  reduce using rule 3 (function_list)


State 8

    7 function: type . _ID $@2 _LPAREN parameter _RPAREN $@3 body
   17 variable: type . variable_part _SEMICOLON

    _ID  shift, and go to state 12

    variable_part  go to state 13


State 9

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 10

    4 function_list: function_list function .

    $default  reduce using rule 4 (function_list)


State 11

    7 function: type . _ID $@2 _LPAREN parameter _RPAREN $@3 body

    _ID  shift, and go to state 14


State 12

    7 function: type _ID . $@2 _LPAREN parameter _RPAREN $@3 body
   15 variable_part: _ID .

    _LPAREN   reduce using rule 5 ($@2)
    $default  reduce using rule 15 (variable_part)

    $@2  go to state 15


State 13

   16 variable_part: variable_part . _COMMA _ID
   17 variable: type variable_part . _SEMICOLON

    _SEMICOLON  shift, and go to state 16
    _COMMA      shift, and go to state 17


State 14

    7 function: type _ID . $@2 _LPAREN parameter _RPAREN $@3 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 15

    7 function: type _ID $@2 . _LPAREN parameter _RPAREN $@3 body

    _LPAREN  shift, and go to state 18


State 16

   17 variable: type variable_part _SEMICOLON .

    $default  reduce using rule 17 (variable)


State 17

   16 variable_part: variable_part _COMMA . _ID

    _ID  shift, and go to state 19


State 18

    7 function: type _ID $@2 _LPAREN . parameter _RPAREN $@3 body

    _TYPE  shift, and go to state 5

    $default  reduce using rule 9 (parameter)

    type       go to state 20
    parameter  go to state 21


State 19

   16 variable_part: variable_part _COMMA _ID .

    $default  reduce using rule 16 (variable_part)


State 20

   10 parameter: type . _ID

    _ID  shift, and go to state 22


State 21

    7 function: type _ID $@2 _LPAREN parameter . _RPAREN $@3 body

    _RPAREN  shift, and go to state 23


State 22

   10 parameter: type _ID .

    $default  reduce using rule 10 (parameter)


State 23

    7 function: type _ID $@2 _LPAREN parameter _RPAREN . $@3 body

    $default  reduce using rule 6 ($@3)

    $@3  go to state 24


State 24

    7 function: type _ID $@2 _LPAREN parameter _RPAREN $@3 . body

    _LBRACKET  shift, and go to state 25

    body  go to state 26


State 25

   12 body: _LBRACKET . variable_list $@4 statement_list _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 27


State 26

    7 function: type _ID $@2 _LPAREN parameter _RPAREN $@3 body .

    $default  reduce using rule 7 (function)


State 27

   12 body: _LBRACKET variable_list . $@4 statement_list _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 5

    $default  reduce using rule 11 ($@4)

    type      go to state 28
    $@4       go to state 29
    variable  go to state 9


State 28

   17 variable: type . variable_part _SEMICOLON

    _ID  shift, and go to state 30

    variable_part  go to state 13


State 29

   12 body: _LBRACKET variable_list $@4 . statement_list _RBRACKET

    $default  reduce using rule 18 (statement_list)

    statement_list  go to state 31


State 30

   15 variable_part: _ID .

    $default  reduce using rule 15 (variable_part)


State 31

   12 body: _LBRACKET variable_list $@4 statement_list . _RBRACKET
   19 statement_list: statement_list . statement

    _IF          shift, and go to state 32
    _RETURN      shift, and go to state 33
    _ID          shift, and go to state 34
    _LBRACKET    shift, and go to state 35
    _RBRACKET    shift, and go to state 36
    _DO          shift, and go to state 37
    _WHILE       shift, and go to state 38
    _ASM         shift, and go to state 39
    ONLY_ASSIGN  shift, and go to state 40

    statement             go to state 41
    increment             go to state 42
    decrement             go to state 43
    compound_statement    go to state 44
    do_loop               go to state 45
    while_loop            go to state 46
    for_loop              go to state 47
    assignment_statement  go to state 48
    left_part_assignment  go to state 49
    if_statement          go to state 50
    if_part               go to state 51
    return_statement      go to state 52


State 32

   63 if_part: _IF . _LPAREN @9 rel_exp $@10 _RPAREN statement

    _LPAREN  shift, and go to state 53


State 33

   65 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 58
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62


State 34

   30 increment: _ID . _INC _SEMICOLON
   31 decrement: _ID . _DEC _SEMICOLON
   40 left_part_assignment: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 63
    _INC     shift, and go to state 64
    _DEC     shift, and go to state 65


State 35

   32 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 18 (statement_list)

    statement_list  go to state 66


State 36

   12 body: _LBRACKET variable_list $@4 statement_list _RBRACKET .

    $default  reduce using rule 12 (body)


State 37

   34 do_loop: _DO . @5 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 33 (@5)

    @5  go to state 67


State 38

   37 while_loop: _WHILE . @6 _LPAREN rel_exp $@7 _RPAREN statement

    $default  reduce using rule 35 (@6)

    @6  go to state 68


State 39

   29 statement: _ASM .

    $default  reduce using rule 29 (statement)


State 40

   21 statement: ONLY_ASSIGN . assignment_statement

    _ID  shift, and go to state 69

    assignment_statement  go to state 70
    left_part_assignment  go to state 49


State 41

   19 statement_list: statement_list statement .

    $default  reduce using rule 19 (statement_list)


State 42

   24 statement: increment .

    $default  reduce using rule 24 (statement)


State 43

   25 statement: decrement .

    $default  reduce using rule 25 (statement)


State 44

   20 statement: compound_statement .

    $default  reduce using rule 20 (statement)


State 45

   26 statement: do_loop .

    $default  reduce using rule 26 (statement)


State 46

   27 statement: while_loop .

    $default  reduce using rule 27 (statement)


State 47

   28 statement: for_loop .

    $default  reduce using rule 28 (statement)


State 48

   38 for_loop: assignment_statement . rel_exp _SEMICOLON left_part_assignment statement

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 71
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 72


State 49

   39 assignment_statement: left_part_assignment . _SEMICOLON

    _SEMICOLON  shift, and go to state 73


State 50

   22 statement: if_statement .

    $default  reduce using rule 22 (statement)


State 51

   56 if_statement: if_part .
   57             | if_part . _ELSE statement

    _ELSE  shift, and go to state 74

    $default  reduce using rule 56 (if_statement)


State 52

   23 statement: return_statement .

    $default  reduce using rule 23 (statement)


State 53

   63 if_part: _IF _LPAREN . @9 rel_exp $@10 _RPAREN statement

    $default  reduce using rule 61 (@9)

    @9  go to state 75


State 54

   45 exp: _ID .
   48    | _ID . _INC
   49    | _ID . _DEC
   53 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _INC  shift, and go to state 76
    _DEC  shift, and go to state 77

    _LPAREN   reduce using rule 52 ($@8)
    $default  reduce using rule 45 (exp)

    $@8  go to state 78


State 55

   50 literal: _INT_NUMBER .

    $default  reduce using rule 50 (literal)


State 56

   51 literal: _BYTE_NUMBER .

    $default  reduce using rule 51 (literal)


State 57

   47 exp: _LPAREN . num_exp _RPAREN
   58 conditional_operator: _LPAREN . rel_exp _RPAREN _QMARK conditional_value _DDOT conditional_value

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 79
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 80


State 58

   42 num_exp: num_exp . _AROP exp
   65 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 81
    _AROP       shift, and go to state 82


State 59

   41 num_exp: exp .

    $default  reduce using rule 41 (num_exp)


State 60

   44 exp: literal .

    $default  reduce using rule 44 (exp)


State 61

   46 exp: function_call .

    $default  reduce using rule 46 (exp)


State 62

   43 num_exp: conditional_operator .

    $default  reduce using rule 43 (num_exp)


State 63

   40 left_part_assignment: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 83
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62


State 64

   30 increment: _ID _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 84


State 65

   31 decrement: _ID _DEC . _SEMICOLON

    _SEMICOLON  shift, and go to state 85


State 66

   19 statement_list: statement_list . statement
   32 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF          shift, and go to state 32
    _RETURN      shift, and go to state 33
    _ID          shift, and go to state 34
    _LBRACKET    shift, and go to state 35
    _RBRACKET    shift, and go to state 86
    _DO          shift, and go to state 37
    _WHILE       shift, and go to state 38
    _ASM         shift, and go to state 39
    ONLY_ASSIGN  shift, and go to state 40

    statement             go to state 41
    increment             go to state 42
    decrement             go to state 43
    compound_statement    go to state 44
    do_loop               go to state 45
    while_loop            go to state 46
    for_loop              go to state 47
    assignment_statement  go to state 48
    left_part_assignment  go to state 49
    if_statement          go to state 50
    if_part               go to state 51
    return_statement      go to state 52


State 67

   34 do_loop: _DO @5 . statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _IF          shift, and go to state 32
    _RETURN      shift, and go to state 33
    _ID          shift, and go to state 34
    _LBRACKET    shift, and go to state 35
    _DO          shift, and go to state 37
    _WHILE       shift, and go to state 38
    _ASM         shift, and go to state 39
    ONLY_ASSIGN  shift, and go to state 40

    statement             go to state 87
    increment             go to state 42
    decrement             go to state 43
    compound_statement    go to state 44
    do_loop               go to state 45
    while_loop            go to state 46
    for_loop              go to state 47
    assignment_statement  go to state 48
    left_part_assignment  go to state 49
    if_statement          go to state 50
    if_part               go to state 51
    return_statement      go to state 52


State 68

   37 while_loop: _WHILE @6 . _LPAREN rel_exp $@7 _RPAREN statement

    _LPAREN  shift, and go to state 88


State 69

   40 left_part_assignment: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 63


State 70

   21 statement: ONLY_ASSIGN assignment_statement .

    $default  reduce using rule 21 (statement)


State 71

   42 num_exp: num_exp . _AROP exp
   64 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 82
    _RELOP  shift, and go to state 89


State 72

   38 for_loop: assignment_statement rel_exp . _SEMICOLON left_part_assignment statement

    _SEMICOLON  shift, and go to state 90


State 73

   39 assignment_statement: left_part_assignment _SEMICOLON .

    $default  reduce using rule 39 (assignment_statement)


State 74

   57 if_statement: if_part _ELSE . statement

    _IF          shift, and go to state 32
    _RETURN      shift, and go to state 33
    _ID          shift, and go to state 34
    _LBRACKET    shift, and go to state 35
    _DO          shift, and go to state 37
    _WHILE       shift, and go to state 38
    _ASM         shift, and go to state 39
    ONLY_ASSIGN  shift, and go to state 40

    statement             go to state 91
    increment             go to state 42
    decrement             go to state 43
    compound_statement    go to state 44
    do_loop               go to state 45
    while_loop            go to state 46
    for_loop              go to state 47
    assignment_statement  go to state 48
    left_part_assignment  go to state 49
    if_statement          go to state 50
    if_part               go to state 51
    return_statement      go to state 52


State 75

   63 if_part: _IF _LPAREN @9 . rel_exp $@10 _RPAREN statement

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 71
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 92


State 76

   48 exp: _ID _INC .

    $default  reduce using rule 48 (exp)


State 77

   49 exp: _ID _DEC .

    $default  reduce using rule 49 (exp)


State 78

   53 function_call: _ID $@8 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 93


State 79

   42 num_exp: num_exp . _AROP exp
   47 exp: _LPAREN num_exp . _RPAREN
   64 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 94
    _AROP    shift, and go to state 82
    _RELOP   shift, and go to state 89


State 80

   58 conditional_operator: _LPAREN rel_exp . _RPAREN _QMARK conditional_value _DDOT conditional_value

    _RPAREN  shift, and go to state 95


State 81

   65 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 65 (return_statement)


State 82

   42 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 96

    exp            go to state 97
    literal        go to state 60
    function_call  go to state 61


State 83

   40 left_part_assignment: _ID _ASSIGN num_exp .
   42 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 82

    $default  reduce using rule 40 (left_part_assignment)


State 84

   30 increment: _ID _INC _SEMICOLON .

    $default  reduce using rule 30 (increment)


State 85

   31 decrement: _ID _DEC _SEMICOLON .

    $default  reduce using rule 31 (decrement)


State 86

   32 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 32 (compound_statement)


State 87

   34 do_loop: _DO @5 statement . _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 98


State 88

   37 while_loop: _WHILE @6 _LPAREN . rel_exp $@7 _RPAREN statement

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 71
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 99


State 89

   64 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 100
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62


State 90

   38 for_loop: assignment_statement rel_exp _SEMICOLON . left_part_assignment statement

    _ID  shift, and go to state 69

    left_part_assignment  go to state 101


State 91

   57 if_statement: if_part _ELSE statement .

    $default  reduce using rule 57 (if_statement)


State 92

   63 if_part: _IF _LPAREN @9 rel_exp . $@10 _RPAREN statement

    $default  reduce using rule 62 ($@10)

    $@10  go to state 102


State 93

   53 function_call: _ID $@8 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    $default  reduce using rule 54 (argument)

    num_exp               go to state 103
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    argument              go to state 104
    conditional_operator  go to state 62


State 94

   47 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 47 (exp)


State 95

   58 conditional_operator: _LPAREN rel_exp _RPAREN . _QMARK conditional_value _DDOT conditional_value

    _QMARK  shift, and go to state 105


State 96

   47 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 106
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62


State 97

   42 num_exp: num_exp _AROP exp .

    $default  reduce using rule 42 (num_exp)


State 98

   34 do_loop: _DO @5 statement _WHILE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 107


State 99

   37 while_loop: _WHILE @6 _LPAREN rel_exp . $@7 _RPAREN statement

    $default  reduce using rule 36 ($@7)

    $@7  go to state 108


State 100

   42 num_exp: num_exp . _AROP exp
   64 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 82

    $default  reduce using rule 64 (rel_exp)


State 101

   38 for_loop: assignment_statement rel_exp _SEMICOLON left_part_assignment . statement

    _IF          shift, and go to state 32
    _RETURN      shift, and go to state 33
    _ID          shift, and go to state 34
    _LBRACKET    shift, and go to state 35
    _DO          shift, and go to state 37
    _WHILE       shift, and go to state 38
    _ASM         shift, and go to state 39
    ONLY_ASSIGN  shift, and go to state 40

    statement             go to state 109
    increment             go to state 42
    decrement             go to state 43
    compound_statement    go to state 44
    do_loop               go to state 45
    while_loop            go to state 46
    for_loop              go to state 47
    assignment_statement  go to state 48
    left_part_assignment  go to state 49
    if_statement          go to state 50
    if_part               go to state 51
    return_statement      go to state 52


State 102

   63 if_part: _IF _LPAREN @9 rel_exp $@10 . _RPAREN statement

    _RPAREN  shift, and go to state 110


State 103

   42 num_exp: num_exp . _AROP exp
   55 argument: num_exp .

    _AROP  shift, and go to state 82

    $default  reduce using rule 55 (argument)


State 104

   53 function_call: _ID $@8 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 111


State 105

   58 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK . conditional_value _DDOT conditional_value

    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56

    literal            go to state 113
    conditional_value  go to state 114


State 106

   42 num_exp: num_exp . _AROP exp
   47 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 94
    _AROP    shift, and go to state 82


State 107

   34 do_loop: _DO @5 statement _WHILE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 71
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 115


State 108

   37 while_loop: _WHILE @6 _LPAREN rel_exp $@7 . _RPAREN statement

    _RPAREN  shift, and go to state 116


State 109

   38 for_loop: assignment_statement rel_exp _SEMICOLON left_part_assignment statement .

    $default  reduce using rule 38 (for_loop)


State 110

   63 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN . statement

    _IF          shift, and go to state 32
    _RETURN      shift, and go to state 33
    _ID          shift, and go to state 34
    _LBRACKET    shift, and go to state 35
    _DO          shift, and go to state 37
    _WHILE       shift, and go to state 38
    _ASM         shift, and go to state 39
    ONLY_ASSIGN  shift, and go to state 40

    statement             go to state 117
    increment             go to state 42
    decrement             go to state 43
    compound_statement    go to state 44
    do_loop               go to state 45
    while_loop            go to state 46
    for_loop              go to state 47
    assignment_statement  go to state 48
    left_part_assignment  go to state 49
    if_statement          go to state 50
    if_part               go to state 51
    return_statement      go to state 52


State 111

   53 function_call: _ID $@8 _LPAREN argument _RPAREN .

    $default  reduce using rule 53 (function_call)


State 112

   60 conditional_value: _ID .

    $default  reduce using rule 60 (conditional_value)


State 113

   59 conditional_value: literal .

    $default  reduce using rule 59 (conditional_value)


State 114

   58 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value . _DDOT conditional_value

    _DDOT  shift, and go to state 118


State 115

   34 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 119


State 116

   37 while_loop: _WHILE @6 _LPAREN rel_exp $@7 _RPAREN . statement

    _IF          shift, and go to state 32
    _RETURN      shift, and go to state 33
    _ID          shift, and go to state 34
    _LBRACKET    shift, and go to state 35
    _DO          shift, and go to state 37
    _WHILE       shift, and go to state 38
    _ASM         shift, and go to state 39
    ONLY_ASSIGN  shift, and go to state 40

    statement             go to state 120
    increment             go to state 42
    decrement             go to state 43
    compound_statement    go to state 44
    do_loop               go to state 45
    while_loop            go to state 46
    for_loop              go to state 47
    assignment_statement  go to state 48
    left_part_assignment  go to state 49
    if_statement          go to state 50
    if_part               go to state 51
    return_statement      go to state 52


State 117

   63 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN statement .

    $default  reduce using rule 63 (if_part)


State 118

   58 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value _DDOT . conditional_value

    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 55
    _BYTE_NUMBER  shift, and go to state 56

    literal            go to state 113
    conditional_value  go to state 121


State 119

   34 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 122


State 120

   37 while_loop: _WHILE @6 _LPAREN rel_exp $@7 _RPAREN statement .

    $default  reduce using rule 37 (while_loop)


State 121

   58 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value _DDOT conditional_value .

    $default  reduce using rule 58 (conditional_operator)


State 122

   34 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 34 (do_loop)
