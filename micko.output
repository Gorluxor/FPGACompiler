Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 variable_list function_list

    3 function_list: function
    4              | function_list function

    5 $@2: %empty

    6 $@3: %empty

    7 function: type _ID $@2 _LPAREN parameter_list _RPAREN $@3 body

    8 type: _TYPE

    9 parameter_list: %empty
   10               | parameter_list _COMMA parameter

   11 parameter: type _ID

   12 $@4: %empty

   13 body: _LBRACKET variable_list $@4 statement_list _RBRACKET

   14 variable_list: %empty
   15              | variable_list variable

   16 variable_part: _ID
   17              | variable_part _COMMA _ID

   18 variable: type variable_part _SEMICOLON

   19 statement_list: %empty
   20               | statement_list statement

   21 statement: compound_statement
   22          | assignment_statement
   23          | if_statement
   24          | return_statement
   25          | increment
   26          | decrement
   27          | do_loop
   28          | while_loop
   29          | for_loop
   30          | _ASM

   31 increment: _ID _INC _SEMICOLON

   32 decrement: _ID _DEC _SEMICOLON

   33 compound_statement: _LBRACKET statement_list _RBRACKET

   34 @5: %empty

   35 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

   36 @6: %empty

   37 $@7: %empty

   38 while_loop: _WHILE @6 _LPAREN rel_exp $@7 _RPAREN statement

   39 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN statement

   40 assignment_statement: left_part_assignment _SEMICOLON

   41 left_part_assignment: _ID _ASSIGN num_exp

   42 num_exp: exp
   43        | num_exp _AROP exp
   44        | conditional_operator

   45 exp: literal
   46    | _ID
   47    | function_call
   48    | _LPAREN num_exp _RPAREN
   49    | _ID _INC
   50    | _ID _DEC

   51 literal: _INT_NUMBER
   52        | _BYTE_NUMBER

   53 $@8: %empty

   54 function_call: _ID $@8 _LPAREN argument _RPAREN

   55 argument: %empty
   56         | num_exp

   57 if_statement: if_part
   58             | if_part _ELSE statement

   59 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value _DDOT conditional_value

   60 conditional_value: literal
   61                  | _ID

   62 @9: %empty

   63 $@10: %empty

   64 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN statement

   65 rel_exp: num_exp _RELOP num_exp

   66 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 8
_IF (259) 64
_ELSE (260) 58
_RETURN (261) 66
_ID (262) 7 11 16 17 31 32 41 46 49 50 54 61
_INT_NUMBER (263) 51
_BYTE_NUMBER (264) 52
_LPAREN (265) 7 35 38 39 48 54 59 64
_RPAREN (266) 7 35 38 39 48 54 59 64
_LBRACKET (267) 13 33
_FOR (268) 39
_RBRACKET (269) 13 33
_ASSIGN (270) 41
_SEMICOLON (271) 18 31 32 35 39 40 66
_AROP (272) 43
_RELOP (273) 65
_INC (274) 31 49
_DEC (275) 32 50
_DDOT (276) 59
_QMARK (277) 59
_COMMA (278) 10 17
_DO (279) 35
_WHILE (280) 35 38
_ASM (281) 30
ONLY_IF (282)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 2, on right: 0
$@1 (30)
    on left: 1, on right: 2
function_list (31)
    on left: 3 4, on right: 2 4
function (32)
    on left: 7, on right: 3 4
$@2 (33)
    on left: 5, on right: 7
$@3 (34)
    on left: 6, on right: 7
type (35)
    on left: 8, on right: 7 11 18
parameter_list (36)
    on left: 9 10, on right: 7 10
parameter (37)
    on left: 11, on right: 10
body (38)
    on left: 13, on right: 7
$@4 (39)
    on left: 12, on right: 13
variable_list (40)
    on left: 14 15, on right: 2 13 15
variable_part (41)
    on left: 16 17, on right: 17 18
variable (42)
    on left: 18, on right: 15
statement_list (43)
    on left: 19 20, on right: 13 20 33
statement (44)
    on left: 21 22 23 24 25 26 27 28 29 30, on right: 20 35 38 39 58
    64
increment (45)
    on left: 31, on right: 25
decrement (46)
    on left: 32, on right: 26
compound_statement (47)
    on left: 33, on right: 21
do_loop (48)
    on left: 35, on right: 27
@5 (49)
    on left: 34, on right: 35
while_loop (50)
    on left: 38, on right: 28
@6 (51)
    on left: 36, on right: 38
$@7 (52)
    on left: 37, on right: 38
for_loop (53)
    on left: 39, on right: 29
assignment_statement (54)
    on left: 40, on right: 22 39
left_part_assignment (55)
    on left: 41, on right: 39 40
num_exp (56)
    on left: 42 43 44, on right: 41 43 48 56 65 66
exp (57)
    on left: 45 46 47 48 49 50, on right: 42 43
literal (58)
    on left: 51 52, on right: 45 60
function_call (59)
    on left: 54, on right: 47
$@8 (60)
    on left: 53, on right: 54
argument (61)
    on left: 55 56, on right: 54
if_statement (62)
    on left: 57 58, on right: 23
conditional_operator (63)
    on left: 59, on right: 44
conditional_value (64)
    on left: 60 61, on right: 59
if_part (65)
    on left: 64, on right: 57 58
@9 (66)
    on left: 62, on right: 64
$@10 (67)
    on left: 63, on right: 64
rel_exp (68)
    on left: 65, on right: 35 38 39 59 64
return_statement (69)
    on left: 66, on right: 24


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . variable_list function_list

    $default  reduce using rule 14 (variable_list)

    variable_list  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 variable_list . function_list
   15 variable_list: variable_list . variable

    _TYPE  shift, and go to state 5

    function_list  go to state 6
    function       go to state 7
    type           go to state 8
    variable       go to state 9


State 5

    8 type: _TYPE .

    $default  reduce using rule 8 (type)


State 6

    2 program: $@1 variable_list function_list .
    4 function_list: function_list . function

    _TYPE  shift, and go to state 5

    $default  reduce using rule 2 (program)

    function  go to state 10
    type      go to state 11


State 7

    3 function_list: function .

    $default  reduce using rule 3 (function_list)


State 8

    7 function: type . _ID $@2 _LPAREN parameter_list _RPAREN $@3 body
   18 variable: type . variable_part _SEMICOLON

    _ID  shift, and go to state 12

    variable_part  go to state 13


State 9

   15 variable_list: variable_list variable .

    $default  reduce using rule 15 (variable_list)


State 10

    4 function_list: function_list function .

    $default  reduce using rule 4 (function_list)


State 11

    7 function: type . _ID $@2 _LPAREN parameter_list _RPAREN $@3 body

    _ID  shift, and go to state 14


State 12

    7 function: type _ID . $@2 _LPAREN parameter_list _RPAREN $@3 body
   16 variable_part: _ID .

    _LPAREN   reduce using rule 5 ($@2)
    $default  reduce using rule 16 (variable_part)

    $@2  go to state 15


State 13

   17 variable_part: variable_part . _COMMA _ID
   18 variable: type variable_part . _SEMICOLON

    _SEMICOLON  shift, and go to state 16
    _COMMA      shift, and go to state 17


State 14

    7 function: type _ID . $@2 _LPAREN parameter_list _RPAREN $@3 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 15

    7 function: type _ID $@2 . _LPAREN parameter_list _RPAREN $@3 body

    _LPAREN  shift, and go to state 18


State 16

   18 variable: type variable_part _SEMICOLON .

    $default  reduce using rule 18 (variable)


State 17

   17 variable_part: variable_part _COMMA . _ID

    _ID  shift, and go to state 19


State 18

    7 function: type _ID $@2 _LPAREN . parameter_list _RPAREN $@3 body

    $default  reduce using rule 9 (parameter_list)

    parameter_list  go to state 20


State 19

   17 variable_part: variable_part _COMMA _ID .

    $default  reduce using rule 17 (variable_part)


State 20

    7 function: type _ID $@2 _LPAREN parameter_list . _RPAREN $@3 body
   10 parameter_list: parameter_list . _COMMA parameter

    _RPAREN  shift, and go to state 21
    _COMMA   shift, and go to state 22


State 21

    7 function: type _ID $@2 _LPAREN parameter_list _RPAREN . $@3 body

    $default  reduce using rule 6 ($@3)

    $@3  go to state 23


State 22

   10 parameter_list: parameter_list _COMMA . parameter

    _TYPE  shift, and go to state 5

    type       go to state 24
    parameter  go to state 25


State 23

    7 function: type _ID $@2 _LPAREN parameter_list _RPAREN $@3 . body

    _LBRACKET  shift, and go to state 26

    body  go to state 27


State 24

   11 parameter: type . _ID

    _ID  shift, and go to state 28


State 25

   10 parameter_list: parameter_list _COMMA parameter .

    $default  reduce using rule 10 (parameter_list)


State 26

   13 body: _LBRACKET . variable_list $@4 statement_list _RBRACKET

    $default  reduce using rule 14 (variable_list)

    variable_list  go to state 29


State 27

    7 function: type _ID $@2 _LPAREN parameter_list _RPAREN $@3 body .

    $default  reduce using rule 7 (function)


State 28

   11 parameter: type _ID .

    $default  reduce using rule 11 (parameter)


State 29

   13 body: _LBRACKET variable_list . $@4 statement_list _RBRACKET
   15 variable_list: variable_list . variable

    _TYPE  shift, and go to state 5

    $default  reduce using rule 12 ($@4)

    type      go to state 30
    $@4       go to state 31
    variable  go to state 9


State 30

   18 variable: type . variable_part _SEMICOLON

    _ID  shift, and go to state 32

    variable_part  go to state 13


State 31

   13 body: _LBRACKET variable_list $@4 . statement_list _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 33


State 32

   16 variable_part: _ID .

    $default  reduce using rule 16 (variable_part)


State 33

   13 body: _LBRACKET variable_list $@4 statement_list . _RBRACKET
   20 statement_list: statement_list . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _FOR       shift, and go to state 38
    _RBRACKET  shift, and go to state 39
    _DO        shift, and go to state 40
    _WHILE     shift, and go to state 41
    _ASM       shift, and go to state 42

    statement             go to state 43
    increment             go to state 44
    decrement             go to state 45
    compound_statement    go to state 46
    do_loop               go to state 47
    while_loop            go to state 48
    for_loop              go to state 49
    assignment_statement  go to state 50
    left_part_assignment  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 34

   64 if_part: _IF . _LPAREN @9 rel_exp $@10 _RPAREN statement

    _LPAREN  shift, and go to state 55


State 35

   66 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 60
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64


State 36

   31 increment: _ID . _INC _SEMICOLON
   32 decrement: _ID . _DEC _SEMICOLON
   41 left_part_assignment: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 65
    _INC     shift, and go to state 66
    _DEC     shift, and go to state 67


State 37

   33 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 68


State 38

   39 for_loop: _FOR . _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN statement

    _LPAREN  shift, and go to state 69


State 39

   13 body: _LBRACKET variable_list $@4 statement_list _RBRACKET .

    $default  reduce using rule 13 (body)


State 40

   35 do_loop: _DO . @5 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 34 (@5)

    @5  go to state 70


State 41

   38 while_loop: _WHILE . @6 _LPAREN rel_exp $@7 _RPAREN statement

    $default  reduce using rule 36 (@6)

    @6  go to state 71


State 42

   30 statement: _ASM .

    $default  reduce using rule 30 (statement)


State 43

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 44

   25 statement: increment .

    $default  reduce using rule 25 (statement)


State 45

   26 statement: decrement .

    $default  reduce using rule 26 (statement)


State 46

   21 statement: compound_statement .

    $default  reduce using rule 21 (statement)


State 47

   27 statement: do_loop .

    $default  reduce using rule 27 (statement)


State 48

   28 statement: while_loop .

    $default  reduce using rule 28 (statement)


State 49

   29 statement: for_loop .

    $default  reduce using rule 29 (statement)


State 50

   22 statement: assignment_statement .

    $default  reduce using rule 22 (statement)


State 51

   40 assignment_statement: left_part_assignment . _SEMICOLON

    _SEMICOLON  shift, and go to state 72


State 52

   23 statement: if_statement .

    $default  reduce using rule 23 (statement)


State 53

   57 if_statement: if_part .
   58             | if_part . _ELSE statement

    _ELSE  shift, and go to state 73

    $default  reduce using rule 57 (if_statement)


State 54

   24 statement: return_statement .

    $default  reduce using rule 24 (statement)


State 55

   64 if_part: _IF _LPAREN . @9 rel_exp $@10 _RPAREN statement

    $default  reduce using rule 62 (@9)

    @9  go to state 74


State 56

   46 exp: _ID .
   49    | _ID . _INC
   50    | _ID . _DEC
   54 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _INC  shift, and go to state 75
    _DEC  shift, and go to state 76

    _LPAREN   reduce using rule 53 ($@8)
    $default  reduce using rule 46 (exp)

    $@8  go to state 77


State 57

   51 literal: _INT_NUMBER .

    $default  reduce using rule 51 (literal)


State 58

   52 literal: _BYTE_NUMBER .

    $default  reduce using rule 52 (literal)


State 59

   48 exp: _LPAREN . num_exp _RPAREN
   59 conditional_operator: _LPAREN . rel_exp _RPAREN _QMARK conditional_value _DDOT conditional_value

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 78
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 79


State 60

   43 num_exp: num_exp . _AROP exp
   66 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 80
    _AROP       shift, and go to state 81


State 61

   42 num_exp: exp .

    $default  reduce using rule 42 (num_exp)


State 62

   45 exp: literal .

    $default  reduce using rule 45 (exp)


State 63

   47 exp: function_call .

    $default  reduce using rule 47 (exp)


State 64

   44 num_exp: conditional_operator .

    $default  reduce using rule 44 (num_exp)


State 65

   41 left_part_assignment: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 82
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64


State 66

   31 increment: _ID _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 83


State 67

   32 decrement: _ID _DEC . _SEMICOLON

    _SEMICOLON  shift, and go to state 84


State 68

   20 statement_list: statement_list . statement
   33 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _FOR       shift, and go to state 38
    _RBRACKET  shift, and go to state 85
    _DO        shift, and go to state 40
    _WHILE     shift, and go to state 41
    _ASM       shift, and go to state 42

    statement             go to state 43
    increment             go to state 44
    decrement             go to state 45
    compound_statement    go to state 46
    do_loop               go to state 47
    while_loop            go to state 48
    for_loop              go to state 49
    assignment_statement  go to state 50
    left_part_assignment  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 69

   39 for_loop: _FOR _LPAREN . assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN statement

    _ID  shift, and go to state 86

    assignment_statement  go to state 87
    left_part_assignment  go to state 51


State 70

   35 do_loop: _DO @5 . statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _FOR       shift, and go to state 38
    _DO        shift, and go to state 40
    _WHILE     shift, and go to state 41
    _ASM       shift, and go to state 42

    statement             go to state 88
    increment             go to state 44
    decrement             go to state 45
    compound_statement    go to state 46
    do_loop               go to state 47
    while_loop            go to state 48
    for_loop              go to state 49
    assignment_statement  go to state 50
    left_part_assignment  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 71

   38 while_loop: _WHILE @6 . _LPAREN rel_exp $@7 _RPAREN statement

    _LPAREN  shift, and go to state 89


State 72

   40 assignment_statement: left_part_assignment _SEMICOLON .

    $default  reduce using rule 40 (assignment_statement)


State 73

   58 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _FOR       shift, and go to state 38
    _DO        shift, and go to state 40
    _WHILE     shift, and go to state 41
    _ASM       shift, and go to state 42

    statement             go to state 90
    increment             go to state 44
    decrement             go to state 45
    compound_statement    go to state 46
    do_loop               go to state 47
    while_loop            go to state 48
    for_loop              go to state 49
    assignment_statement  go to state 50
    left_part_assignment  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 74

   64 if_part: _IF _LPAREN @9 . rel_exp $@10 _RPAREN statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 91
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 92


State 75

   49 exp: _ID _INC .

    $default  reduce using rule 49 (exp)


State 76

   50 exp: _ID _DEC .

    $default  reduce using rule 50 (exp)


State 77

   54 function_call: _ID $@8 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 93


State 78

   43 num_exp: num_exp . _AROP exp
   48 exp: _LPAREN num_exp . _RPAREN
   65 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 94
    _AROP    shift, and go to state 81
    _RELOP   shift, and go to state 95


State 79

   59 conditional_operator: _LPAREN rel_exp . _RPAREN _QMARK conditional_value _DDOT conditional_value

    _RPAREN  shift, and go to state 96


State 80

   66 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 66 (return_statement)


State 81

   43 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 97

    exp            go to state 98
    literal        go to state 62
    function_call  go to state 63


State 82

   41 left_part_assignment: _ID _ASSIGN num_exp .
   43 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 81

    $default  reduce using rule 41 (left_part_assignment)


State 83

   31 increment: _ID _INC _SEMICOLON .

    $default  reduce using rule 31 (increment)


State 84

   32 decrement: _ID _DEC _SEMICOLON .

    $default  reduce using rule 32 (decrement)


State 85

   33 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 33 (compound_statement)


State 86

   41 left_part_assignment: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 65


State 87

   39 for_loop: _FOR _LPAREN assignment_statement . rel_exp _SEMICOLON left_part_assignment _RPAREN statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 91
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 99


State 88

   35 do_loop: _DO @5 statement . _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 100


State 89

   38 while_loop: _WHILE @6 _LPAREN . rel_exp $@7 _RPAREN statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 91
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 101


State 90

   58 if_statement: if_part _ELSE statement .

    $default  reduce using rule 58 (if_statement)


State 91

   43 num_exp: num_exp . _AROP exp
   65 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 81
    _RELOP  shift, and go to state 95


State 92

   64 if_part: _IF _LPAREN @9 rel_exp . $@10 _RPAREN statement

    $default  reduce using rule 63 ($@10)

    $@10  go to state 102


State 93

   54 function_call: _ID $@8 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    $default  reduce using rule 55 (argument)

    num_exp               go to state 103
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    argument              go to state 104
    conditional_operator  go to state 64


State 94

   48 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 48 (exp)


State 95

   65 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 105
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64


State 96

   59 conditional_operator: _LPAREN rel_exp _RPAREN . _QMARK conditional_value _DDOT conditional_value

    _QMARK  shift, and go to state 106


State 97

   48 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 107
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64


State 98

   43 num_exp: num_exp _AROP exp .

    $default  reduce using rule 43 (num_exp)


State 99

   39 for_loop: _FOR _LPAREN assignment_statement rel_exp . _SEMICOLON left_part_assignment _RPAREN statement

    _SEMICOLON  shift, and go to state 108


State 100

   35 do_loop: _DO @5 statement _WHILE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 109


State 101

   38 while_loop: _WHILE @6 _LPAREN rel_exp . $@7 _RPAREN statement

    $default  reduce using rule 37 ($@7)

    $@7  go to state 110


State 102

   64 if_part: _IF _LPAREN @9 rel_exp $@10 . _RPAREN statement

    _RPAREN  shift, and go to state 111


State 103

   43 num_exp: num_exp . _AROP exp
   56 argument: num_exp .

    _AROP  shift, and go to state 81

    $default  reduce using rule 56 (argument)


State 104

   54 function_call: _ID $@8 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 112


State 105

   43 num_exp: num_exp . _AROP exp
   65 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 81

    $default  reduce using rule 65 (rel_exp)


State 106

   59 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK . conditional_value _DDOT conditional_value

    _ID           shift, and go to state 113
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58

    literal            go to state 114
    conditional_value  go to state 115


State 107

   43 num_exp: num_exp . _AROP exp
   48 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 94
    _AROP    shift, and go to state 81


State 108

   39 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON . left_part_assignment _RPAREN statement

    _ID  shift, and go to state 86

    left_part_assignment  go to state 116


State 109

   35 do_loop: _DO @5 statement _WHILE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 91
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 117


State 110

   38 while_loop: _WHILE @6 _LPAREN rel_exp $@7 . _RPAREN statement

    _RPAREN  shift, and go to state 118


State 111

   64 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _FOR       shift, and go to state 38
    _DO        shift, and go to state 40
    _WHILE     shift, and go to state 41
    _ASM       shift, and go to state 42

    statement             go to state 119
    increment             go to state 44
    decrement             go to state 45
    compound_statement    go to state 46
    do_loop               go to state 47
    while_loop            go to state 48
    for_loop              go to state 49
    assignment_statement  go to state 50
    left_part_assignment  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 112

   54 function_call: _ID $@8 _LPAREN argument _RPAREN .

    $default  reduce using rule 54 (function_call)


State 113

   61 conditional_value: _ID .

    $default  reduce using rule 61 (conditional_value)


State 114

   60 conditional_value: literal .

    $default  reduce using rule 60 (conditional_value)


State 115

   59 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value . _DDOT conditional_value

    _DDOT  shift, and go to state 120


State 116

   39 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment . _RPAREN statement

    _RPAREN  shift, and go to state 121


State 117

   35 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 122


State 118

   38 while_loop: _WHILE @6 _LPAREN rel_exp $@7 _RPAREN . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _FOR       shift, and go to state 38
    _DO        shift, and go to state 40
    _WHILE     shift, and go to state 41
    _ASM       shift, and go to state 42

    statement             go to state 123
    increment             go to state 44
    decrement             go to state 45
    compound_statement    go to state 46
    do_loop               go to state 47
    while_loop            go to state 48
    for_loop              go to state 49
    assignment_statement  go to state 50
    left_part_assignment  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 119

   64 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN statement .

    $default  reduce using rule 64 (if_part)


State 120

   59 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value _DDOT . conditional_value

    _ID           shift, and go to state 113
    _INT_NUMBER   shift, and go to state 57
    _BYTE_NUMBER  shift, and go to state 58

    literal            go to state 114
    conditional_value  go to state 124


State 121

   39 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _FOR       shift, and go to state 38
    _DO        shift, and go to state 40
    _WHILE     shift, and go to state 41
    _ASM       shift, and go to state 42

    statement             go to state 125
    increment             go to state 44
    decrement             go to state 45
    compound_statement    go to state 46
    do_loop               go to state 47
    while_loop            go to state 48
    for_loop              go to state 49
    assignment_statement  go to state 50
    left_part_assignment  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 122

   35 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 126


State 123

   38 while_loop: _WHILE @6 _LPAREN rel_exp $@7 _RPAREN statement .

    $default  reduce using rule 38 (while_loop)


State 124

   59 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value _DDOT conditional_value .

    $default  reduce using rule 59 (conditional_operator)


State 125

   39 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN statement .

    $default  reduce using rule 39 (for_loop)


State 126

   35 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 35 (do_loop)
