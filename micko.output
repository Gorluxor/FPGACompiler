Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 variable_list function_list

    3 asm: _ASM

    4 function_list: function
    5              | function_list function
    6              | function_list asm

    7 $@2: %empty

    8 $@3: %empty

    9 function: type _ID $@2 _LPAREN parameter_list _RPAREN $@3 body

   10 type: _TYPE

   11 parameter_list: %empty
   12               | parameter_list _COMMA parameter

   13 parameter: type _ID

   14 $@4: %empty

   15 body: _LBRACKET variable_list $@4 statement_list _RBRACKET

   16 variable_list: %empty
   17              | variable_list variable

   18 variable_part: _ID
   19              | variable_part _COMMA _ID

   20 variable: type variable_part _SEMICOLON

   21 statement_list: %empty
   22               | statement_list statement

   23 statement: compound_statement
   24          | assignment_statement
   25          | if_statement
   26          | return_statement
   27          | increment
   28          | decrement
   29          | do_loop
   30          | while_loop
   31          | for_loop
   32          | asm

   33 increment: _ID _INC _SEMICOLON

   34 decrement: _ID _DEC _SEMICOLON

   35 compound_statement: _LBRACKET statement_list _RBRACKET

   36 @5: %empty

   37 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

   38 @6: %empty

   39 $@7: %empty

   40 while_loop: _WHILE @6 _LPAREN rel_exp $@7 _RPAREN statement

   41 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN statement

   42 assignment_statement: left_part_assignment _SEMICOLON

   43 left_part_assignment: _ID _ASSIGN num_exp

   44 num_exp: exp
   45        | num_exp _AROP exp
   46        | conditional_operator

   47 exp: literal
   48    | _ID
   49    | function_call
   50    | _LPAREN num_exp _RPAREN
   51    | _ID _INC
   52    | _ID _DEC

   53 literal: _INT_NUMBER
   54        | _BYTE_NUMBER

   55 $@8: %empty

   56 function_call: _ID $@8 _LPAREN argument _RPAREN

   57 argument: %empty
   58         | num_exp

   59 if_statement: if_part
   60             | if_part _ELSE statement

   61 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value _DDOT conditional_value

   62 conditional_value: literal
   63                  | _ID

   64 @9: %empty

   65 $@10: %empty

   66 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN statement

   67 rel_exp: num_exp _RELOP num_exp

   68 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 10
_IF (259) 66
_ELSE (260) 60
_RETURN (261) 68
_ID (262) 9 13 18 19 33 34 43 48 51 52 56 63
_INT_NUMBER (263) 53
_BYTE_NUMBER (264) 54
_LPAREN (265) 9 37 40 41 50 56 61 66
_RPAREN (266) 9 37 40 41 50 56 61 66
_LBRACKET (267) 15 35
_FOR (268) 41
_RBRACKET (269) 15 35
_ASSIGN (270) 43
_SEMICOLON (271) 20 33 34 37 41 42 68
_AROP (272) 45
_RELOP (273) 67
_INC (274) 33 51
_DEC (275) 34 52
_DDOT (276) 61
_QMARK (277) 61
_COMMA (278) 12 19
_DO (279) 37
_WHILE (280) 37 40
_ASM (281) 3
ONLY_IF (282)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 2, on right: 0
$@1 (30)
    on left: 1, on right: 2
asm (31)
    on left: 3, on right: 6 32
function_list (32)
    on left: 4 5 6, on right: 2 5 6
function (33)
    on left: 9, on right: 4 5
$@2 (34)
    on left: 7, on right: 9
$@3 (35)
    on left: 8, on right: 9
type (36)
    on left: 10, on right: 9 13 20
parameter_list (37)
    on left: 11 12, on right: 9 12
parameter (38)
    on left: 13, on right: 12
body (39)
    on left: 15, on right: 9
$@4 (40)
    on left: 14, on right: 15
variable_list (41)
    on left: 16 17, on right: 2 15 17
variable_part (42)
    on left: 18 19, on right: 19 20
variable (43)
    on left: 20, on right: 17
statement_list (44)
    on left: 21 22, on right: 15 22 35
statement (45)
    on left: 23 24 25 26 27 28 29 30 31 32, on right: 22 37 40 41 60
    66
increment (46)
    on left: 33, on right: 27
decrement (47)
    on left: 34, on right: 28
compound_statement (48)
    on left: 35, on right: 23
do_loop (49)
    on left: 37, on right: 29
@5 (50)
    on left: 36, on right: 37
while_loop (51)
    on left: 40, on right: 30
@6 (52)
    on left: 38, on right: 40
$@7 (53)
    on left: 39, on right: 40
for_loop (54)
    on left: 41, on right: 31
assignment_statement (55)
    on left: 42, on right: 24 41
left_part_assignment (56)
    on left: 43, on right: 41 42
num_exp (57)
    on left: 44 45 46, on right: 43 45 50 58 67 68
exp (58)
    on left: 47 48 49 50 51 52, on right: 44 45
literal (59)
    on left: 53 54, on right: 47 62
function_call (60)
    on left: 56, on right: 49
$@8 (61)
    on left: 55, on right: 56
argument (62)
    on left: 57 58, on right: 56
if_statement (63)
    on left: 59 60, on right: 25
conditional_operator (64)
    on left: 61, on right: 46
conditional_value (65)
    on left: 62 63, on right: 61
if_part (66)
    on left: 66, on right: 59 60
@9 (67)
    on left: 64, on right: 66
$@10 (68)
    on left: 65, on right: 66
rel_exp (69)
    on left: 67, on right: 37 40 41 61 66
return_statement (70)
    on left: 68, on right: 26


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . variable_list function_list

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 variable_list . function_list
   17 variable_list: variable_list . variable

    _TYPE  shift, and go to state 5

    function_list  go to state 6
    function       go to state 7
    type           go to state 8
    variable       go to state 9


State 5

   10 type: _TYPE .

    $default  reduce using rule 10 (type)


State 6

    2 program: $@1 variable_list function_list .
    5 function_list: function_list . function
    6              | function_list . asm

    _TYPE  shift, and go to state 5
    _ASM   shift, and go to state 10

    $default  reduce using rule 2 (program)

    asm       go to state 11
    function  go to state 12
    type      go to state 13


State 7

    4 function_list: function .

    $default  reduce using rule 4 (function_list)


State 8

    9 function: type . _ID $@2 _LPAREN parameter_list _RPAREN $@3 body
   20 variable: type . variable_part _SEMICOLON

    _ID  shift, and go to state 14

    variable_part  go to state 15


State 9

   17 variable_list: variable_list variable .

    $default  reduce using rule 17 (variable_list)


State 10

    3 asm: _ASM .

    $default  reduce using rule 3 (asm)


State 11

    6 function_list: function_list asm .

    $default  reduce using rule 6 (function_list)


State 12

    5 function_list: function_list function .

    $default  reduce using rule 5 (function_list)


State 13

    9 function: type . _ID $@2 _LPAREN parameter_list _RPAREN $@3 body

    _ID  shift, and go to state 16


State 14

    9 function: type _ID . $@2 _LPAREN parameter_list _RPAREN $@3 body
   18 variable_part: _ID .

    _LPAREN   reduce using rule 7 ($@2)
    $default  reduce using rule 18 (variable_part)

    $@2  go to state 17


State 15

   19 variable_part: variable_part . _COMMA _ID
   20 variable: type variable_part . _SEMICOLON

    _SEMICOLON  shift, and go to state 18
    _COMMA      shift, and go to state 19


State 16

    9 function: type _ID . $@2 _LPAREN parameter_list _RPAREN $@3 body

    $default  reduce using rule 7 ($@2)

    $@2  go to state 17


State 17

    9 function: type _ID $@2 . _LPAREN parameter_list _RPAREN $@3 body

    _LPAREN  shift, and go to state 20


State 18

   20 variable: type variable_part _SEMICOLON .

    $default  reduce using rule 20 (variable)


State 19

   19 variable_part: variable_part _COMMA . _ID

    _ID  shift, and go to state 21


State 20

    9 function: type _ID $@2 _LPAREN . parameter_list _RPAREN $@3 body

    $default  reduce using rule 11 (parameter_list)

    parameter_list  go to state 22


State 21

   19 variable_part: variable_part _COMMA _ID .

    $default  reduce using rule 19 (variable_part)


State 22

    9 function: type _ID $@2 _LPAREN parameter_list . _RPAREN $@3 body
   12 parameter_list: parameter_list . _COMMA parameter

    _RPAREN  shift, and go to state 23
    _COMMA   shift, and go to state 24


State 23

    9 function: type _ID $@2 _LPAREN parameter_list _RPAREN . $@3 body

    $default  reduce using rule 8 ($@3)

    $@3  go to state 25


State 24

   12 parameter_list: parameter_list _COMMA . parameter

    _TYPE  shift, and go to state 5

    type       go to state 26
    parameter  go to state 27


State 25

    9 function: type _ID $@2 _LPAREN parameter_list _RPAREN $@3 . body

    _LBRACKET  shift, and go to state 28

    body  go to state 29


State 26

   13 parameter: type . _ID

    _ID  shift, and go to state 30


State 27

   12 parameter_list: parameter_list _COMMA parameter .

    $default  reduce using rule 12 (parameter_list)


State 28

   15 body: _LBRACKET . variable_list $@4 statement_list _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 31


State 29

    9 function: type _ID $@2 _LPAREN parameter_list _RPAREN $@3 body .

    $default  reduce using rule 9 (function)


State 30

   13 parameter: type _ID .

    $default  reduce using rule 13 (parameter)


State 31

   15 body: _LBRACKET variable_list . $@4 statement_list _RBRACKET
   17 variable_list: variable_list . variable

    _TYPE  shift, and go to state 5

    $default  reduce using rule 14 ($@4)

    type      go to state 32
    $@4       go to state 33
    variable  go to state 9


State 32

   20 variable: type . variable_part _SEMICOLON

    _ID  shift, and go to state 34

    variable_part  go to state 15


State 33

   15 body: _LBRACKET variable_list $@4 . statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 35


State 34

   18 variable_part: _ID .

    $default  reduce using rule 18 (variable_part)


State 35

   15 body: _LBRACKET variable_list $@4 statement_list . _RBRACKET
   22 statement_list: statement_list . statement

    _IF        shift, and go to state 36
    _RETURN    shift, and go to state 37
    _ID        shift, and go to state 38
    _LBRACKET  shift, and go to state 39
    _FOR       shift, and go to state 40
    _RBRACKET  shift, and go to state 41
    _DO        shift, and go to state 42
    _WHILE     shift, and go to state 43
    _ASM       shift, and go to state 10

    asm                   go to state 44
    statement             go to state 45
    increment             go to state 46
    decrement             go to state 47
    compound_statement    go to state 48
    do_loop               go to state 49
    while_loop            go to state 50
    for_loop              go to state 51
    assignment_statement  go to state 52
    left_part_assignment  go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56


State 36

   66 if_part: _IF . _LPAREN @9 rel_exp $@10 _RPAREN statement

    _LPAREN  shift, and go to state 57


State 37

   68 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp               go to state 62
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    conditional_operator  go to state 66


State 38

   33 increment: _ID . _INC _SEMICOLON
   34 decrement: _ID . _DEC _SEMICOLON
   43 left_part_assignment: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 67
    _INC     shift, and go to state 68
    _DEC     shift, and go to state 69


State 39

   35 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 70


State 40

   41 for_loop: _FOR . _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN statement

    _LPAREN  shift, and go to state 71


State 41

   15 body: _LBRACKET variable_list $@4 statement_list _RBRACKET .

    $default  reduce using rule 15 (body)


State 42

   37 do_loop: _DO . @5 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 36 (@5)

    @5  go to state 72


State 43

   40 while_loop: _WHILE . @6 _LPAREN rel_exp $@7 _RPAREN statement

    $default  reduce using rule 38 (@6)

    @6  go to state 73


State 44

   32 statement: asm .

    $default  reduce using rule 32 (statement)


State 45

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 46

   27 statement: increment .

    $default  reduce using rule 27 (statement)


State 47

   28 statement: decrement .

    $default  reduce using rule 28 (statement)


State 48

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


State 49

   29 statement: do_loop .

    $default  reduce using rule 29 (statement)


State 50

   30 statement: while_loop .

    $default  reduce using rule 30 (statement)


State 51

   31 statement: for_loop .

    $default  reduce using rule 31 (statement)


State 52

   24 statement: assignment_statement .

    $default  reduce using rule 24 (statement)


State 53

   42 assignment_statement: left_part_assignment . _SEMICOLON

    _SEMICOLON  shift, and go to state 74


State 54

   25 statement: if_statement .

    $default  reduce using rule 25 (statement)


State 55

   59 if_statement: if_part .
   60             | if_part . _ELSE statement

    _ELSE  shift, and go to state 75

    $default  reduce using rule 59 (if_statement)


State 56

   26 statement: return_statement .

    $default  reduce using rule 26 (statement)


State 57

   66 if_part: _IF _LPAREN . @9 rel_exp $@10 _RPAREN statement

    $default  reduce using rule 64 (@9)

    @9  go to state 76


State 58

   48 exp: _ID .
   51    | _ID . _INC
   52    | _ID . _DEC
   56 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _INC  shift, and go to state 77
    _DEC  shift, and go to state 78

    _LPAREN   reduce using rule 55 ($@8)
    $default  reduce using rule 48 (exp)

    $@8  go to state 79


State 59

   53 literal: _INT_NUMBER .

    $default  reduce using rule 53 (literal)


State 60

   54 literal: _BYTE_NUMBER .

    $default  reduce using rule 54 (literal)


State 61

   50 exp: _LPAREN . num_exp _RPAREN
   61 conditional_operator: _LPAREN . rel_exp _RPAREN _QMARK conditional_value _DDOT conditional_value

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp               go to state 80
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    conditional_operator  go to state 66
    rel_exp               go to state 81


State 62

   45 num_exp: num_exp . _AROP exp
   68 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 82
    _AROP       shift, and go to state 83


State 63

   44 num_exp: exp .

    $default  reduce using rule 44 (num_exp)


State 64

   47 exp: literal .

    $default  reduce using rule 47 (exp)


State 65

   49 exp: function_call .

    $default  reduce using rule 49 (exp)


State 66

   46 num_exp: conditional_operator .

    $default  reduce using rule 46 (num_exp)


State 67

   43 left_part_assignment: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp               go to state 84
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    conditional_operator  go to state 66


State 68

   33 increment: _ID _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 85


State 69

   34 decrement: _ID _DEC . _SEMICOLON

    _SEMICOLON  shift, and go to state 86


State 70

   22 statement_list: statement_list . statement
   35 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 36
    _RETURN    shift, and go to state 37
    _ID        shift, and go to state 38
    _LBRACKET  shift, and go to state 39
    _FOR       shift, and go to state 40
    _RBRACKET  shift, and go to state 87
    _DO        shift, and go to state 42
    _WHILE     shift, and go to state 43
    _ASM       shift, and go to state 10

    asm                   go to state 44
    statement             go to state 45
    increment             go to state 46
    decrement             go to state 47
    compound_statement    go to state 48
    do_loop               go to state 49
    while_loop            go to state 50
    for_loop              go to state 51
    assignment_statement  go to state 52
    left_part_assignment  go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56


State 71

   41 for_loop: _FOR _LPAREN . assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN statement

    _ID  shift, and go to state 88

    assignment_statement  go to state 89
    left_part_assignment  go to state 53


State 72

   37 do_loop: _DO @5 . statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _IF        shift, and go to state 36
    _RETURN    shift, and go to state 37
    _ID        shift, and go to state 38
    _LBRACKET  shift, and go to state 39
    _FOR       shift, and go to state 40
    _DO        shift, and go to state 42
    _WHILE     shift, and go to state 43
    _ASM       shift, and go to state 10

    asm                   go to state 44
    statement             go to state 90
    increment             go to state 46
    decrement             go to state 47
    compound_statement    go to state 48
    do_loop               go to state 49
    while_loop            go to state 50
    for_loop              go to state 51
    assignment_statement  go to state 52
    left_part_assignment  go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56


State 73

   40 while_loop: _WHILE @6 . _LPAREN rel_exp $@7 _RPAREN statement

    _LPAREN  shift, and go to state 91


State 74

   42 assignment_statement: left_part_assignment _SEMICOLON .

    $default  reduce using rule 42 (assignment_statement)


State 75

   60 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 36
    _RETURN    shift, and go to state 37
    _ID        shift, and go to state 38
    _LBRACKET  shift, and go to state 39
    _FOR       shift, and go to state 40
    _DO        shift, and go to state 42
    _WHILE     shift, and go to state 43
    _ASM       shift, and go to state 10

    asm                   go to state 44
    statement             go to state 92
    increment             go to state 46
    decrement             go to state 47
    compound_statement    go to state 48
    do_loop               go to state 49
    while_loop            go to state 50
    for_loop              go to state 51
    assignment_statement  go to state 52
    left_part_assignment  go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56


State 76

   66 if_part: _IF _LPAREN @9 . rel_exp $@10 _RPAREN statement

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp               go to state 93
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    conditional_operator  go to state 66
    rel_exp               go to state 94


State 77

   51 exp: _ID _INC .

    $default  reduce using rule 51 (exp)


State 78

   52 exp: _ID _DEC .

    $default  reduce using rule 52 (exp)


State 79

   56 function_call: _ID $@8 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 95


State 80

   45 num_exp: num_exp . _AROP exp
   50 exp: _LPAREN num_exp . _RPAREN
   67 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 96
    _AROP    shift, and go to state 83
    _RELOP   shift, and go to state 97


State 81

   61 conditional_operator: _LPAREN rel_exp . _RPAREN _QMARK conditional_value _DDOT conditional_value

    _RPAREN  shift, and go to state 98


State 82

   68 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 68 (return_statement)


State 83

   45 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 99

    exp            go to state 100
    literal        go to state 64
    function_call  go to state 65


State 84

   43 left_part_assignment: _ID _ASSIGN num_exp .
   45 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 83

    $default  reduce using rule 43 (left_part_assignment)


State 85

   33 increment: _ID _INC _SEMICOLON .

    $default  reduce using rule 33 (increment)


State 86

   34 decrement: _ID _DEC _SEMICOLON .

    $default  reduce using rule 34 (decrement)


State 87

   35 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 35 (compound_statement)


State 88

   43 left_part_assignment: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 67


State 89

   41 for_loop: _FOR _LPAREN assignment_statement . rel_exp _SEMICOLON left_part_assignment _RPAREN statement

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp               go to state 93
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    conditional_operator  go to state 66
    rel_exp               go to state 101


State 90

   37 do_loop: _DO @5 statement . _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 102


State 91

   40 while_loop: _WHILE @6 _LPAREN . rel_exp $@7 _RPAREN statement

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp               go to state 93
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    conditional_operator  go to state 66
    rel_exp               go to state 103


State 92

   60 if_statement: if_part _ELSE statement .

    $default  reduce using rule 60 (if_statement)


State 93

   45 num_exp: num_exp . _AROP exp
   67 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 83
    _RELOP  shift, and go to state 97


State 94

   66 if_part: _IF _LPAREN @9 rel_exp . $@10 _RPAREN statement

    $default  reduce using rule 65 ($@10)

    $@10  go to state 104


State 95

   56 function_call: _ID $@8 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    $default  reduce using rule 57 (argument)

    num_exp               go to state 105
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    argument              go to state 106
    conditional_operator  go to state 66


State 96

   50 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 50 (exp)


State 97

   67 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp               go to state 107
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    conditional_operator  go to state 66


State 98

   61 conditional_operator: _LPAREN rel_exp _RPAREN . _QMARK conditional_value _DDOT conditional_value

    _QMARK  shift, and go to state 108


State 99

   50 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp               go to state 109
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    conditional_operator  go to state 66


State 100

   45 num_exp: num_exp _AROP exp .

    $default  reduce using rule 45 (num_exp)


State 101

   41 for_loop: _FOR _LPAREN assignment_statement rel_exp . _SEMICOLON left_part_assignment _RPAREN statement

    _SEMICOLON  shift, and go to state 110


State 102

   37 do_loop: _DO @5 statement _WHILE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 111


State 103

   40 while_loop: _WHILE @6 _LPAREN rel_exp . $@7 _RPAREN statement

    $default  reduce using rule 39 ($@7)

    $@7  go to state 112


State 104

   66 if_part: _IF _LPAREN @9 rel_exp $@10 . _RPAREN statement

    _RPAREN  shift, and go to state 113


State 105

   45 num_exp: num_exp . _AROP exp
   58 argument: num_exp .

    _AROP  shift, and go to state 83

    $default  reduce using rule 58 (argument)


State 106

   56 function_call: _ID $@8 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 114


State 107

   45 num_exp: num_exp . _AROP exp
   67 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 83

    $default  reduce using rule 67 (rel_exp)


State 108

   61 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK . conditional_value _DDOT conditional_value

    _ID           shift, and go to state 115
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60

    literal            go to state 116
    conditional_value  go to state 117


State 109

   45 num_exp: num_exp . _AROP exp
   50 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 96
    _AROP    shift, and go to state 83


State 110

   41 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON . left_part_assignment _RPAREN statement

    _ID  shift, and go to state 88

    left_part_assignment  go to state 118


State 111

   37 do_loop: _DO @5 statement _WHILE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp               go to state 93
    exp                   go to state 63
    literal               go to state 64
    function_call         go to state 65
    conditional_operator  go to state 66
    rel_exp               go to state 119


State 112

   40 while_loop: _WHILE @6 _LPAREN rel_exp $@7 . _RPAREN statement

    _RPAREN  shift, and go to state 120


State 113

   66 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN . statement

    _IF        shift, and go to state 36
    _RETURN    shift, and go to state 37
    _ID        shift, and go to state 38
    _LBRACKET  shift, and go to state 39
    _FOR       shift, and go to state 40
    _DO        shift, and go to state 42
    _WHILE     shift, and go to state 43
    _ASM       shift, and go to state 10

    asm                   go to state 44
    statement             go to state 121
    increment             go to state 46
    decrement             go to state 47
    compound_statement    go to state 48
    do_loop               go to state 49
    while_loop            go to state 50
    for_loop              go to state 51
    assignment_statement  go to state 52
    left_part_assignment  go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56


State 114

   56 function_call: _ID $@8 _LPAREN argument _RPAREN .

    $default  reduce using rule 56 (function_call)


State 115

   63 conditional_value: _ID .

    $default  reduce using rule 63 (conditional_value)


State 116

   62 conditional_value: literal .

    $default  reduce using rule 62 (conditional_value)


State 117

   61 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value . _DDOT conditional_value

    _DDOT  shift, and go to state 122


State 118

   41 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment . _RPAREN statement

    _RPAREN  shift, and go to state 123


State 119

   37 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 124


State 120

   40 while_loop: _WHILE @6 _LPAREN rel_exp $@7 _RPAREN . statement

    _IF        shift, and go to state 36
    _RETURN    shift, and go to state 37
    _ID        shift, and go to state 38
    _LBRACKET  shift, and go to state 39
    _FOR       shift, and go to state 40
    _DO        shift, and go to state 42
    _WHILE     shift, and go to state 43
    _ASM       shift, and go to state 10

    asm                   go to state 44
    statement             go to state 125
    increment             go to state 46
    decrement             go to state 47
    compound_statement    go to state 48
    do_loop               go to state 49
    while_loop            go to state 50
    for_loop              go to state 51
    assignment_statement  go to state 52
    left_part_assignment  go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56


State 121

   66 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN statement .

    $default  reduce using rule 66 (if_part)


State 122

   61 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value _DDOT . conditional_value

    _ID           shift, and go to state 115
    _INT_NUMBER   shift, and go to state 59
    _BYTE_NUMBER  shift, and go to state 60

    literal            go to state 116
    conditional_value  go to state 126


State 123

   41 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN . statement

    _IF        shift, and go to state 36
    _RETURN    shift, and go to state 37
    _ID        shift, and go to state 38
    _LBRACKET  shift, and go to state 39
    _FOR       shift, and go to state 40
    _DO        shift, and go to state 42
    _WHILE     shift, and go to state 43
    _ASM       shift, and go to state 10

    asm                   go to state 44
    statement             go to state 127
    increment             go to state 46
    decrement             go to state 47
    compound_statement    go to state 48
    do_loop               go to state 49
    while_loop            go to state 50
    for_loop              go to state 51
    assignment_statement  go to state 52
    left_part_assignment  go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56


State 124

   37 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 128


State 125

   40 while_loop: _WHILE @6 _LPAREN rel_exp $@7 _RPAREN statement .

    $default  reduce using rule 40 (while_loop)


State 126

   61 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK conditional_value _DDOT conditional_value .

    $default  reduce using rule 61 (conditional_operator)


State 127

   41 for_loop: _FOR _LPAREN assignment_statement rel_exp _SEMICOLON left_part_assignment _RPAREN statement .

    $default  reduce using rule 41 (for_loop)


State 128

   37 do_loop: _DO @5 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 37 (do_loop)
